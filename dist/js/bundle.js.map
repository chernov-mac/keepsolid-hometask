{"version":3,"sources":["webpack:///webpack/bootstrap 4c416121e0d26db74583","webpack:///./src/js/autocomplete.js","webpack:///./src/js/todoList.js","webpack:///./src/js/main.js","webpack:///./src/js/chips.js","webpack:///./src/js/todoListItem.js","webpack:///./src/js/todoListBuilder.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;;AAEA;;AAEA;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,2BAA2B,4BAA4B;AACvD;AACA;;AAEA,yDAAyD,MAAM,cAAc,UAAU,IAAI,MAAM;AACjG;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sCAAsC,MAAM;;AAE5C;AACA;;AAEA,sBAAsB,uCAAuC;AAC7D;AACA;AACA;AACA,oEAAoE,kCAAkC;AACtG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8EAA8E,oBAAoB;AAClG;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2EAA2E,QAAQ;AACnF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;;;;;;;ACpTA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAE6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iCAAiC;AACjC,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,2BAA2B;AACxD,8BAA8B,4BAA4B;AAC1D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,8BAA8B;AAC/D,kCAAkC,+BAA+B;AACjE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA,uCAAuC,yBAAyB;AAChE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AAAA;AAAA;;;;;;;;;;;;ACzRA;AAAA;AACA;AACA;;AAEA;AACuB;AACP;AACG;AACO;;AAE1B;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,iDAAiD;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;;AAEA;AACA;;AAEA;AACA;AACA,iDAAiD;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;AC/HA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAE6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AAAA;AAAA;;AAEA;;AAEA;;AAEA;AACA,iCAAiC;AACjC,kBAAkB;AAClB,sBAAsB;AACtB,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,wBAAwB;;AAElD;AACA;;AAEA;AACA;;AAEA,yEAAyE;AACzE;;AAEA;AACA;AACA,2BAA2B,UAAU,cAAc,KAAK,IAAI,KAAK,EAAE,UAAU;AAC7E,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;;;;;;;;ACxLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;;AAEA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC,yCAAyC;AACzC,wBAAwB;AACxB,oCAAoC;AACpC,8BAA8B;AAC9B,4BAA4B;AAC5B;;AAEA;AAAA;AAAA;;;;;;;;ACnKA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,EAAE;AACF;AACA;AAAA;AAAA;;AAEA;;AAEA;;AAEA,iCAAiC;AACjC;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gCAAgC,0BAA0B;AAC1D;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA,uCAAuC;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,uBAAuB;AACxC,qDAAqD,OAAO;AAC5D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AAAA;AAAA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4c416121e0d26db74583","/*\n*    JavaScript Autocomplete\n*    Author: Vladimir Chernov\n*    For KeepSolid Summer Internship 2017\n*/\n/*jslint esversion: 6 */\n\nexport const AutocompleteDefaults = {\n    noSuggestionText: 'No matches',\n    arrowNavigation: true,\n    symbolsToStart: 1, // start matching from this symbols amount\n    limit: 5, // 0 - all suggestions\n    sort: 'ASC', // ASC || DESC\n    onSelect: null, // callback function on item select\n    errorClass: 'error', // sort order\n    highliteMatchesClass: 'highlite' // span.highlite\n};\n\nexport class Autocomplete {\n\n    constructor(input, data, options) {\n\n        this.input = input;\n        this.data = data;\n        this.options = Object.assign({}, AutocompleteDefaults, options);\n        this.resultData = [];\n\n        this.init();\n    }\n\n    get isOpened() {\n        return this._isOpened;\n    }\n\n    set isOpened(value) {\n        this._isOpened = value;\n        if(value) {\n            this.ac.classList.add('active');\n        } else {\n            this.ac.classList.remove('active');\n        }\n    }\n\n    init() {\n        this.wrapElements();\n        this.createButtons();\n        this.createDialog();\n        this.setData();\n        this.initHandlers();\n    }\n\n    setData() {\n        if(typeof this.data != 'string') {\n            this.data = Object.values(this.data);\n            this.sortData();\n            this.resultData = this.data;\n            this.setDialogList();\n        } else if(typeof this.data == 'string') {\n            this.getDataByURL(this.data);\n        } else {\n            console.error('There is no data to autocomplete.');\n            return false;\n        }\n    }\n\n    wrapElements() {\n        // div.autocomplete to contain .form-group, .dialog and buttons\n        this.ac = document.createElement('div');\n        this.ac.classList.add('autocomplete');\n\n        // div.form-control to contain input itself\n        this.fc = this.input.parentNode;\n        // this.fc = this.input.closest('.form-control');\n        if (this.fc.classList.contains('form-control')) {\n            this.fc = document.createElement('div');\n            this.fc.classList.add('form-control');\n            this.ac.appendChild(this.fc);\n            this.input.parentNode.insertBefore(this.ac, this.input);\n            let originInput = this.input.cloneNode(true);\n            this.input.parentNode.removeChild(this.input);\n            this.fc.appendChild(originInput);\n            this.input = originInput;\n        } else {\n            this.fc.parentNode.insertBefore(this.ac, this.fc);\n            let originFC = this.fc.cloneNode(true);\n            let originInput = this.input.cloneNode(true);\n            this.fc.parentNode.removeChild(this.fc);\n            this.ac.appendChild(originFC);\n            this.fc = originFC;\n            this.input = originInput;\n            this.fc.innerHTML = '';\n            this.fc.appendChild(this.input);\n        }\n    }\n\n    createButtons() {\n        // create close button\n        this.close = document.createElement('span');\n        this.close.classList.add('close');\n        this.fc.appendChild(this.close);\n    }\n\n    createDialog() {\n        // create dialog to contain suggestions block with options and other\n        this.suggestions = document.createElement('ul');\n        this.suggestions.classList.add('suggestions');\n        this.dialog = document.createElement('div');\n        this.dialog.classList.add('dialog');\n\n        this.dialog.appendChild(this.suggestions);\n        this.ac.appendChild(this.dialog);\n\n        this.isOpened = false;\n    }\n\n    getDataByURL(url) {\n        fetch(url)\n            .then(function(response) {\n                return response.json();\n            })\n            .then(function(result){\n                this.data = result;\n                this.sortData();\n                this.resultData = this.data;\n                this.setDialogList();\n            })\n            .catch(console.log);\n    }\n\n    clearDialog() {\n        this.suggestions.innerHTML = '';\n        this.fc.classList.remove('error');\n    }\n\n    setDialogList() {\n        this.clearDialog();\n\n        let items = '';\n        if (!this.resultData.length) {\n            this.fc.classList.add(this.options.errorClass);\n            this.showMessage(this.dialog, this.suggestions, this.options.noSuggestionText, 'error', 'noSuggestion');\n        } else {\n            this.removeMessage(this.dialog, 'error', 'noSuggestion');\n            const hl = new RegExp(`<span.*?>(.+?)</span>`, 'gi');\n\n            for (let i = 0; i < this.resultData.length; i++) {\n                let value = this.resultData[i];\n                let dataValue = value.replace(hl, '$1');\n\n                items += `<li class=\"option\" tabindex=\"${i + 1}\" data-val=\"${dataValue}\">${value}</li>`;\n            }\n        }\n\n        this.suggestions.innerHTML = items;\n    }\n\n    showMessage(elem, elemBefore, msg, msgClass, type) {\n        let prevMsg = elem.querySelector('.message.'+msgClass+'[data-type=\"'+type+'\"]');\n        if (prevMsg) {\n            prevMsg.innerHTML = msg;\n        } else {\n            let message = document.createElement('span');\n            message.classList.add('message');\n            message.classList.add(msgClass);\n            message.setAttribute('data-type', type);\n            message.innerHTML = msg;\n            elem.insertBefore(message, elemBefore);\n        }\n    }\n\n    removeMessage(elem, msgClass, type) {\n        let message = elem.querySelector('.message.'+msgClass+'[data-type=\"'+type+'\"]');\n        message && message.remove();\n    }\n\n    sortData() {\n        switch (this.options.sort) {\n            case 'ASC':\n                this.data.sort();\n                break;\n            case 'DESC':\n                this.data.sort().reverse();\n                break;\n        }\n    }\n\n    match(str) {\n        this.resultData = [];\n\n        const value = this.input.value;\n        const regexp = new RegExp(`(${value})`, 'gi');\n\n        let count = 0;\n        let limit = this.options.limit || this.data.length;\n\n        for(let i = 0; i < this.data.length && count < limit; i++) {\n            let item = this.data[i];\n            const matches = item.match(regexp);\n            if (matches) {\n                const string = item.replace(regexp, `<span class=\"${this.options.highliteMatchesClass}\">$1</span>`);\n                this.resultData[this.resultData.length] = string;\n                count++;\n            }\n        }\n        this.setDialogList();\n    }\n\n    selectOption(option) {\n        let str = option.getAttribute('data-val');\n        this.input.value = str;\n        this.match(str);\n        this.close.classList.add('visible');\n        this.input.focus();\n\n        str && this.options.onSelect && this.options.onSelect.call(this, str);\n    }\n\n    initHandlers() {\n        this.input.addEventListener('focus', this.onInputFocus.bind(this));\n        this.input.addEventListener('keyup', this.onInput.bind(this));\n        this.close.addEventListener('click', this.onClose.bind(this));\n        this.suggestions.addEventListener('click', this.onSuggestionsClick.bind(this));\n        document.addEventListener('keyup', this.onKeyPress.bind(this));\n        document.addEventListener('click', this.onOuterClick.bind(this));\n    }\n\n    onInputFocus() {\n        this.isOpened = true;\n    }\n\n    onInput() {\n        if(event.keyCode != 38 && event.keyCode != 40 && event.keyCode != 13) {\n            if (this.input.value.length >= this.options.symbolsToStart) {\n                this.close.classList.add('visible');\n                this.match(this.input.value);\n            } else {\n                this.close.classList.remove('visible');\n                this.resultData = this.data;\n                this.setDialogList();\n            }\n        }\n    }\n\n    onClose() {\n        this.resultData = this.data;\n        this.setDialogList();\n\n        this.close.classList.remove('visible');\n        // this.ac.classList.add('active');\n        this.isOpened = true;\n\n        this.input.value = '';\n        this.input.focus();\n    }\n\n    onKeyPress(event) {\n        switch (event.keyCode) {\n            case 38: // if the UP key is pressed\n                this.focusPrev(document.activeElement);\n                break;\n            case 40: // if the DOWN key is pressed\n                this.focusNext(document.activeElement);\n                break;\n            case 13: // if the ENTER key is pressed\n                if (this.suggestions.contains(document.activeElement)) {\n                    this.selectOption(document.activeElement);\n                }\n                break;\n        }\n    }\n\n    focusPrev(current) {\n        if (current == this.input || current == this.suggestions.firstChild) { this.input.focus(); }\n        else if (this.suggestions.contains(current)) {\n            if (current.previousSibling.classList.contains('selected')) {\n                this.focusPrev(current.previousSibling);\n            } else {\n                current.previousSibling.focus();\n            }\n        }\n    }\n\n    focusNext(current) {\n        if (document.activeElement == this.input) {\n            this.suggestions.querySelector('.option:not(.selected)').focus();\n        }\n        // else if (document.activeElement == this.suggestions.lastChild) { return; }\n        else if (this.suggestions.contains(document.activeElement)) {\n            if (current.nextSibling.classList.contains('selected')) {\n                this.focusNext(current.nextSibling);\n            } else {\n                current.nextSibling.focus();\n            }\n        }\n    }\n\n    onOuterClick(event) {\n        if (event.target !== this.input && event.target !== this.close && !this.suggestions.contains(event.target)) {\n            this.isOpened = false;\n        }\n    }\n\n    onSuggestionsClick(event) {\n        if (this.suggestions.contains(event.target)) {\n            this.selectOption(event.target);\n        }\n    }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/autocomplete.js\n// module id = 0\n// module chunks = 0","/*\n*    JavaScript Autocomplete\n*    Author: Vladimir Chernov\n*    For KeepSolid Summer Internship 2017\n*/\n/*jslint esversion: 6 */\n\nimport { TodoListItem, TodoListItemDefaults } from \"./todoListItem.js\";\n\nexport const TodoListDefaults = {\n\t// adding\n\tenableAdding: true,\n\tcustomAdding: null, // DOM Element form\n\ticonText: '<span class=\"fa fa-plus-circle\"></span>',\n\tplaceholder: 'New todo:',\n\t// title\n\ttitleText: null,\n\ttitleElement: 'h5',\n\ttitleEditable: true,\n\t// tools\n\ttools: true,\n\tmoving: false,\n\tmoveLeftToolText: '<span class=\"fa fa-chevron-circle-left\"></span>',\n\tmoveRightToolText: '<span class=\"fa fa-chevron-circle-right\"></span>',\n\tremoveToolText: '<span class=\"fa fa-trash\"></span>',\n\tclearToolText: '<span class=\"fa fa-times-circle\"></span>',\n\t// other\n\treadonly: false,\n\tlistItem: {} // extends todoListItem default options\n};\n\nconst TEMPLATE = `\n<div class=\"todolist\">\n\t<div class=\"todolist--list\"></div>\n</div>\n`;\n\nexport class TodoList {\n\n\tconstructor(listParentElement, data, options) {\n\t\tthis.options = Object.assign({}, TodoListDefaults, options);\n\t\tthis.options.listItem = Object.assign({}, options.listItem);\n\t\tconsole.log(this.options);\n\n\t\tif (this.options.readonly) {\n\t\t\tthis.options.enableAdding = false;\n\t\t\tthis.options.tools = false;\n\t\t\tthis.options.listItem.editable = false;\n\t\t\tthis.options.listItem.removable = false;\n\t\t}\n\n\t\tthis.data = data || [];\n\t\tthis.itemsArray = []; // contains objects of TodoListItem\n\n\t\tthis.loadTemplate(listParentElement);\n\t\tthis.setList(this.data);\n\t\tthis.initHandlers();\n\t}\n\n\tget title() {\n\t\treturn this._title;\n\t}\n\n\tset title(value) {\n\t\tthis._title = value;\n\t\tthis.titleElement.innerHTML = value;\n\n\t\tlet setTitle = new CustomEvent(\"todoList.setTitle\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { todoList: this }\n\t\t});\n\t\tthis.listElement.dispatchEvent(setTitle);\n\t}\n\n\tloadTemplate(listParentElement) {\n\t\tlistParentElement.innerHTML = TEMPLATE;\n\t\tthis.listElement = listParentElement.querySelector('.todolist--list');\n\n\t\tthis.options.titleText && this.createTitle();\n\t\tthis.options.tools && this.createTools();\n\t\tthis.options.enableAdding && this.setAddingForm();\n\t}\n\n\tcreateTitle() {\n\t\tthis.titleElement = document.createElement(this.options.titleElement);\n\t\tthis.titleElement.classList.add('todolist--title');\n\t\tthis.titleElement.setAttribute('contenteditable', this.options.titleEditable);\n\t\tthis.listElement.parentElement.insertBefore(this.titleElement, this.listElement);\n\t\tthis.title = this.options.titleText;\n\t}\n\n\tcreateTools() {\n\t\tthis.tools = document.createElement('div');\n\t\tthis.tools.classList.add('todolist--tools');\n\n\t\tlet inner = `\n\t\t\t<div class=\"tool clear\">${this.options.clearToolText}</div>\n\t\t\t<div class=\"tool remove\">${this.options.removeToolText}</div>\n\t\t`;\n\t\tthis.tools.innerHTML = inner;\n\t\tthis.listElement.parentElement.insertBefore(this.tools, this.listElement);\n\n\t\tthis.clearTool = this.tools.querySelector('.tool.clear');\n\t\tthis.removeTool = this.tools.querySelector('.tool.remove');\n\n\t\tthis.clearTool.addEventListener('click', this.clearList.bind(this));\n\t\tthis.removeTool.addEventListener('click', this.removeList.bind(this));\n\n\t\tthis.options.moving && this.createMoving();\n\t}\n\n\tcreateMoving() {\n\t\tthis.moveTool = {};\n\n\t\tthis.mover = document.createElement('div');\n\t\tthis.mover.classList.add('tool', 'mover');\n\n\t\tlet inner = `\n\t\t\t<div class=\"tool move left\">${this.options.moveLeftToolText}</div>\n\t\t\t<div class=\"tool move right\">${this.options.moveRightToolText}</div>\n\t\t`;\n\t\tthis.mover.innerHTML = inner;\n\t\tthis.tools.insertBefore(this.mover, this.tools.querySelector('.tool.clear'));\n\n\t\tthis.moveTool.left = this.mover.querySelector('.tool.left');\n\t\tthis.moveTool.right = this.mover.querySelector('.tool.right');\n\n\t\tthis.moveTool.left.addEventListener('click', this.onMoveList.bind(this, 'left'));\n\t\tthis.moveTool.right.addEventListener('click', this.onMoveList.bind(this, 'right'));\n\t};\n\n\tsetAddingForm() {\n\t\tif (this.options.customAdding) {\n\t\t\t// set from options if is set\n\t\t\tthis.addForm = this.options.customAdding;\n\t\t\tthis.addInput = this.addForm.querySelector('input');\n\t\t\tthis.addForm.addEventListener('submit', this.onAddTodo.bind(this));\n\t\t} else {\n\t\t\tthis.createAddingItem();\n\t\t\tthis.addBox.addEventListener('focus', this.onAddBoxFocus.bind(this));\n\t\t\tthis.addBox.addEventListener('input', this.onAddTodo.bind(this));\n\t\t}\n\t}\n\n\tcreateAddingItem() {\n\t\tlet inner = `\n\t\t<div class=\"todolist-item--add-icon\">${this.options.iconText}</div>\n\t\t<div class=\"todolist-item--text single-line\">\n            <div class=\"placeholder\">${this.options.placeholder}</div>\n            <div class=\"adding-box\" contenteditable=\"true\"></div>\n        </div>`;\n\n\t\tthis.addElem = document.createElement('li');\n\t\tthis.addElem.classList.add('todolist-item', 'add-item', 'editable');\n\t\tthis.listElement.appendChild(this.addElem);\n\n\t\tthis.addElem.innerHTML = inner;\n\t\tthis.addBox = this.addElem.querySelector('.adding-box');\n\t}\n\n\tsetList(data) {\n\t\tdata = data || [];\n\t\tthis.itemsArray = [];\n\t\tthis.listElement.innerHTML = '';\n\t\tthis.addElem && this.listElement.appendChild(this.addElem);\n\t\tdata.forEach((todo) => {\n\t\t\tlet item = new TodoListItem(todo.text, todo.complete, this.options.listItem);\n\t\t\tthis.add(item);\n\t\t});\n\t}\n\n\tadd(item) {\n\t\tif (this.addElem) {\n\t\t\tthis.listElement.insertBefore(item.elem, this.addElem);\n\t\t} else {\n\t\t\tthis.listElement.appendChild(item.elem);\n\t\t}\n\n\t\tthis.itemsArray.push(item);\n\n\t\tlet addItem = new CustomEvent(\"todoList.addItem\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { todoList: this }\n\t\t});\n\t\tthis.listElement.dispatchEvent(addItem);\n\t}\n\n\tinitHandlers() {\n\t\tthis.listElement.addEventListener('todoListItem.remove', this.onRemoveTodo.bind(this));\n\t\tdocument.addEventListener('click', this.onBlur.bind(this));\n\t}\n\n\tonRemoveTodo(event) {\n\t\tlet item = event.detail.item;\n\t\tlet index = this.itemsArray.indexOf(item);\n\t\tthis.itemsArray.splice(index, 1);\n\t}\n\n\tonAddBoxFocus(event) {\n\t\tthis.addElem.classList.add('active');\n\t}\n\n\tonBlur(event) {\n\t\tif (this.addElem) {\n\t\t\tif (event.target == this.addBox || event.target.closest('.add-item') == this.addElem) {\n\t\t\t\tthis.addBox.focus();\n\t\t\t} else {\n\t\t\t\tthis.addElem.classList.remove('active');\n\t\t\t}\n\t\t}\n\t\tif (this.title && this.options.titleEditable && event.target != this.titleElement && this.title != this.titleElement.innerHTML) {\n\t\t\tthis.title = this.titleElement.innerHTML;\n\t\t}\n\t}\n\n\tonAddTodo(event) {\n\t\tevent.preventDefault();\n\n\t\tlet value = this.getInputValue(),\n\t\t\titem = null;\n\n\t\tif (value) {\n\t\t\titem = new TodoListItem(value, false, this.options.listItem, this.listElement);\n\t\t\tthis.add(item);\n\t\t\tthis.clearInput();\n\t\t\tthis.addElem && this.addElem.classList.remove('active');\n\t\t\titem.textBox.focus();\n\t\t}\n\n\t\tthis.options.onAddTodo && this.options.onAddTodo.call(this, item);\n\t}\n\n\tclearList() {\n\t\tthis.setList();\n\n\t\tlet clear = new CustomEvent(\"todoList.clear\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { todoList: this }\n\t\t});\n\t\tthis.listElement.dispatchEvent(clear);\n\t}\n\n\tremoveList() {\n\t\tlet todoListRemove = new CustomEvent(\"todoList.remove\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { todoList: this }\n\t\t});\n\t\tthis.listElement.dispatchEvent(todoListRemove);\n\n\t\tthis.listElement.remove();\n\t\tthis.titleElement.remove();\n\t\tthis.tools.remove();\n\t}\n\n\tonMoveList(direction) {\n\t\tlet moveTodoList = new CustomEvent(\"todoList.move\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: {\n\t\t\t\tdirection: direction,\n\t\t\t\ttodoList: this\n\t\t\t}\n\t\t});\n\t\tthis.listElement.dispatchEvent(moveTodoList);\n\t}\n\n\tgetInputValue() {\n\t\tif (this.options.customAdding) {\n\t\t\treturn this.addInput.value;\n\t\t} else {\n\t\t\treturn this.addBox.innerHTML;\n\t\t}\n\t}\n\n\tclearInput() {\n\t\tif (this.options.customAdding) {\n\t\t\tthis.addInput.value = '';\n\t\t} else {\n\t\t\tthis.addBox.innerHTML = '';\n\t\t}\n\t}\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/todoList.js\n// module id = 1\n// module chunks = 0","/*jslint esversion: 6 */\n/*jslint node: true */\n/*global document, alert, fetch, Autocomplete, Chips, TodoList, countriesData, todoData*/\n\n'use strict';\nimport { Autocomplete } from \"./autocomplete.js\";\nimport { Chips } from \"./chips.js\";\nimport { TodoList } from \"./todoList.js\";\nimport { TodoListBuilder } from \"./todoListBuilder.js\";\n\n// TODO: add JS Doc\n\n/* AUTOCOMPLETE */\n\nlet autocompleteInputs = document.querySelectorAll('.present-autocomplete');\nautocompleteInputs = Array.prototype.slice.call(autocompleteInputs);\n\nautocompleteInputs.forEach(curInput => {\n    const dataSource = curInput.dataset.src;\n    curInput.parentNode.classList.add('loading'); // preloader\n\n    getAutocompleteData(dataSource, curInput).then((result) => {\n        const data = Object.keys(result).map(key => result[key]);\n\n        new Autocomplete(curInput, data, {\n            onSelect: (value) => {\n                curInput.value = value;\n                alert(value);\n            }\n        });\n    });\n});\n\n/* CHIPS */\n\nlet chipsInputs = document.querySelectorAll('.present-chips');\nchipsInputs = Array.prototype.slice.call(chipsInputs);\n\nchipsInputs.forEach(curInput => {\n    const dataSource = curInput.dataset.src;\n    curInput.parentNode.classList.add('loading'); // preloader\n\n    getAutocompleteData(dataSource, curInput).then((result) => {\n        const data = Object.keys(result).map(key => result[key]);\n\n        new Chips(curInput, data, {\n            onSelect: (result) => {\n                let str = '<span>' + result.join('</span>, <span>') + '</span>';\n                document.querySelector('.result[data-for=\"#'+curInput.getAttribute('id')+'\"]').innerHTML = str;\n            }\n        });\n    });\n});\n\n/* TODOLIST */\n\nvar todos = document.querySelector('.presentation#todolist');\n\ngetToDoData('todo').then((data) => {\n    let defaultList = new TodoList(todos.querySelector('#todolist-default'), data, {\n        customAdding: document.querySelector('.custom-form'),\n        onAddTodo: onAddTodo,\n        tools: false\n    });\n    let customList = new TodoList(todos.querySelector('#todolist-custom'), data, {\n        titleText: 'Summer education'\n    });\n    let disabledList = new TodoList(todos.querySelector('#todolist-disabled'), data, {\n        readonly: true\n    });\n});\n\n/* TODOLIST BUILDER */\n\nlet boardElement = document.querySelector('#todo-board');\nlet desk = new TodoListBuilder(boardElement, {\n    boardClasses: 'row-24',\n    builderFormOuterClasses: 'row-24>.col.xxs-24.md-12.lg-10.offset-md-6.offset-lg-7.custom-form',\n    builderFormClasses: 'custom-form',\n    builderInputOuterClasses: 'form-control',\n    builderButtonClasses: 'btn btn-add btn-icon blue',\n    todoListOuterClasses: '.col.xxs-24.md-12.lg-8>.card.todolist',\n    builderButtonText: '<span class=\"text\">Add TodoList</span><span class=\"icon\"><span class=\"fa fa-plus\"></span></span>',\n    todoList: {\n        titleText: 'New List'\n    },\n    // sources: ['/data/todos.json']\n});\n\n/* FUNCTIONS */\n\nfunction onAddTodo(item) {\n    let btn = document.querySelector('.custom-form .btn-icon');\n    btn.classList.remove('success', 'error');\n    if (item) {\n        btn.classList.add('success');\n        console.log('Item with text \\'' + item.text + '\\' created successfully! Default complete status is: ' + item.complete + '\\'.');\n    } else {\n        btn.classList.add('error');\n        console.log('Cannot create item with text \\'' + document.querySelector('.custom-form input').value + '\\'.');\n    }\n    setTimeout(function () {\n        btn.classList.remove('success', 'error');\n    }, 2000);\n}\n\nfunction getAutocompleteData(dataString, curInput) {\n    switch (dataString) {\n        case 'countries-cors':\n            return fetch('https://crossorigin.me/http://country.io/names.json', {\n                mode: 'cors',\n            }).then(function(result){\n                curInput.parentNode.classList.remove('loading');\n                return result.json();\n            });\n        default:\n            curInput.parentNode.classList.remove('loading');\n            return new Promise((resolve, reject) => {\n                resolve(countriesData);\n            });\n    }\n}\n\nfunction getToDoData(dataString, todolist) {\n    return new Promise((resolve, reject) => {\n        resolve(todoData);\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/main.js\n// module id = 2\n// module chunks = 0","/*\n*    JavaScript Autocomplete\n*    Author: Vladimir Chernov\n*    For KeepSolid Summer Internship 2017\n*/\n/*jslint esversion: 6 */\n\nimport { Autocomplete, AutocompleteDefaults } from \"./autocomplete.js\";\n\nexport const ChipsDefaults = {\n\tmaxChipsNumber: 4, // 0 - without limit\n\tmaxChipsText: 'Maximum number of chips reached.',\n\tisSelectedText: 'This option is already selected.',\n\tselectOnlyOnce: true,\n\tremovable: true,\n\tremoveBtnText: '&times;',\n\ttoggleOnSelect: false // override selectOnlyOnce (as false)\n};\n\nexport class Chips extends Autocomplete {\n\n\tconstructor(input, data, options) {\n\n\t\tsuper(input, data, options);\n\t\tthis.options = Object.assign({}, ChipsDefaults, this.options);\n\t\tthis.chips = []; // array of strings\n\t\tthis.chipsList = []; // DOM element div.chips-list\n\t\tthis.chipsElem; // DOM element div.autocomplete.chips\n\n\t\tthis.setChipsList();\n\t\tthis.markSelectedOptions();\n\t}\n\n\tsetChipsList() {\n\t\tthis.ac.classList.add('chips');\n\t\tthis.chipsElem = this.ac;\n\t\tthis.chipsList = document.createElement('div');\n\t\tthis.chipsList.classList.add('chips-list');\n\t\tthis.chipsElem.insertBefore(this.chipsList, this.fc);\n\n\t\tif (this.chips.length) { this.updateChipsList(); }\n\n\t\tthis.chipsList.addEventListener('click', this.chipsClick.bind(this));\n\t}\n\n\tupdateChipsList() {\n\t\tthis.removeMessage(this.ac, 'error', 'isSelected');\n\n\t\tlet removeBtn = this.options.removable ? ' <span class=\"remove\">&times;</span>' : '';\n\t\tlet classList = this.options.removable ? 'chip removable' : 'chip';\n\n\t\tlet list = '';\n\t\tthis.chips.forEach((chip) => {\n\t\t\tlist += `<span class=\"${classList}\" data-val=\"${chip}\">${chip}${removeBtn}</span>`;\n\t\t});\n\n\t\tthis.chipsList.innerHTML = list;\n\t\tthis.markSelectedOptions();\n\t\tthis.isMaxAmount();\n\n\t\tthis.options.onSelect && this.options.onSelect.call(this, this.chips);\n\t}\n\n\taddChip(str) {\n\t\tthis.chips[this.chips.length] = str;\n\t\tthis.updateChipsList();\n\t}\n\n\tremoveChip(str) {\n\t\tlet chip = this.chipsList.querySelector('[data-val=\"'+str+'\"]');\n\n\t\tfor(let i = 0; i < this.chips.length; i++) {\n\t\t\tif (this.chips[i] === str) {\n\t\t\t\tthis.chips.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.updateChipsList();\n\t}\n\n\tmarkSelectedOptions() {\n\t\tlet options = this.suggestions.querySelectorAll('.option');\n\t\toptions.forEach((option) => {\n\t\t\tlet value = option.getAttribute('data-val');\n\t\t\tif (this.chips.includes(value)) {\n\t\t\t\tthis.markOption(option);\n\t\t\t} else {\n\t\t\t\tthis.unmarkOption(option);\n\t\t\t}\n\t\t});\n\t}\n\n\tmarkOption(option) {\n\t\toption.classList.add('selected');\n\t\toption.removeAttribute('tabindex');\n\t}\n\n\tunmarkOption(option) {\n\t\toption.classList.remove('selected');\n\t\tlet index = this.resultData.indexOf(option.getAttribute('data-val'));\n\t\toption.setAttribute('tabindex', index);\n\t}\n\n\ttoggleMarking(option) {\n\t\tif (option.classList.contains('selected')) {\n\t\t\tthis.unmarkOption(option);\n\t\t} else {\n\t\t\tthis.markOption(option);\n\t\t}\n\t}\n\n\tisMaxAmount() {\n\t\tif (this.options.maxChipsNumber && this.chips.length >= this.options.maxChipsNumber) {\n\t\t\tthis.showMessage(this.ac, this.chipsList, this.options.maxChipsText, 'error', 'maxChipsNumber');\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.removeMessage(this.ac, 'error', 'maxChipsNumber');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tselectOption(option) {\n\t\tlet str = option.getAttribute('data-val');\n\n\t\tif (!this.isMaxAmount() && this.isAvailable(str)) {\n\t\t\tthis.addChip(str);\n\t\t}\n\t\tthis.markSelectedOptions();\n    }\n\n\ttoggleOption(option) {\n\t\tlet str = option.getAttribute('data-val');\n\n\t\tif (!this.isMaxAmount() && this.isAvailable(str)) {\n\t\t\tthis.addChip(str);\n\t\t} else {\n\t\t\tthis.removeChip(str);\n\t\t}\n\n\t\tthis.markSelectedOptions();\n\t}\n\n\tisAvailable(str) {\n\t\tif (this.isSelected(str) && this.options.selectOnlyOnce) {\n\t\t\tthis.showMessage(this.ac, this.chipsList, this.options.isSelectedText, 'error', 'isSelected');\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tisSelected(str) {\n\t\treturn this.chips.includes(str) ? true : false;\n\t}\n\n\tchipsClick(event) {\n\t\tif (event.target.classList.contains('remove')) {\n\t\t\tlet value = event.target.parentNode.getAttribute('data-val');\n\t\t\tthis.removeChip(value);\n\t\t}\n\t}\n\n\tonInput() {\n\t\tsuper.onInput();\n\t\tthis.markSelectedOptions();\n\t}\n\n\tonClose() {\n\t\tsuper.onClose();\n\t\tthis.markSelectedOptions();\n\t}\n\n\tonSuggestionsClick(event) {\n\t\tthis.removeMessage(this.ac, 'error', 'isSelected');\n\n\t\tif (this.suggestions.contains(event.target) && !this.options.toggleOnSelect) {\n\t\t\tthis.selectOption(event.target);\n\t\t} else if (this.suggestions.contains(event.target) && this.options.toggleOnSelect) {\n\t\t\tthis.toggleOption(event.target);\n\t\t}\n\n\t\tthis.isMaxAmount();\n\t\tthis.input.focus();\n\t}\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/chips.js\n// module id = 3\n// module chunks = 0","/*\n*    JavaScript Autocomplete\n*    Author: Vladimir Chernov\n*    For KeepSolid Summer Internship 2017\n*/\n/*jslint esversion: 6 */\n\nexport const TodoListItemDefaults = {\n\teditable: true,\n\tremovable: true,\n\tsingleLine: true,\n\tremoveBtnText: '<span class=\"fa fa-times-circle\"></span>'\n};\n\nexport class TodoListItem {\n\n\tconstructor(text, complete, options) {\n\n\t\tthis.parentList = options.parentList;\n\t\tthis.options = Object.assign({}, TodoListItemDefaults, options);\n\n\t\tthis.createElem();\n\t\tthis.initHandlers();\n\n\t\tthis.text = text;\n\t\tthis.complete = complete;\n\t}\n\n\tget text() {\n\t\treturn this._text;\n\t}\n\n\tset text(value) {\n\t\tthis._text = value;\n\t\tthis.textBox.innerHTML = value;\n\n\t\tvar itemEdit = new CustomEvent(\"todoListItem.edit\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { item: this }\n\t\t});\n\t\tthis.elem.dispatchEvent(itemEdit);\n\t}\n\n\tget complete() {\n\t\treturn this._complete;\n\t}\n\n\tset complete(value) {\n\t\tthis._complete = value;\n\n\t\tif (value) {\n\t\t\tthis.elem.classList.add('complete');\n\t\t\tthis.checkbox.checked = true;\n\t\t} else {\n\t\t\tthis.elem.classList.remove('complete');\n\t\t\tthis.checkbox.checked = false;\n\t\t}\n\n\t\tvar itemSetStatus = new CustomEvent(\"todoListItem.setStatus\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { item: this }\n\t\t});\n\t\tthis.elem.dispatchEvent(itemSetStatus);\n\t}\n\n\tcreateElem() {\n\t\tthis.elem = document.createElement('li');\n\t\tthis.elem.classList.add('todolist-item');\n\n\t\tthis.createCheckBox();\n\t\tthis.createTextBox();\n\n\t\tthis.options.editable && this.elem.classList.add('editable');\n\t\tthis.textBox.setAttribute('contenteditable', this.options.editable);\n\n\t\tthis.options.removable && this.createRemoveBtn();\n\t}\n\n\tcreateCheckBox() {\n\t\tthis.checkbox = document.createElement('input');\n\t\tthis.checkbox.type = 'checkbox';\n\t\tthis.checkboxLabel = document.createElement('label')\n\t\tthis.checkboxLabel.classList.add('todolist-item--complete');\n\t\tthis.checkboxLabel.appendChild(this.checkbox);\n\t\tthis.elem.appendChild(this.checkboxLabel);\n\t}\n\n\tcreateRemoveBtn() {\n\t\tthis.removeBtn = document.createElement('div');\n\t\tthis.removeBtn.classList.add('todolist-item--remove');\n\t\tthis.removeBtn.innerHTML = this.options.removeBtnText;\n\t\tthis.elem.appendChild(this.removeBtn);\n\t}\n\n\tcreateTextBox() {\n\t\tthis.textBox = document.createElement('div');\n\t\tthis.textBox.classList.add('todolist-item--text');\n\t\tthis.options.singleLine && this.elem.classList.add('single-line');\n\t\tthis.elem.appendChild(this.textBox);\n\t}\n\n\tinitHandlers() {\n\t\tthis.checkboxLabel.addEventListener('click', this.toggleComplete.bind(this));\n\t\tdocument.addEventListener('click', this.onBlur.bind(this));\n\n\t\tif (this.options.editable) {\n\t\t\tthis.textBox.addEventListener('focus', this.onEdit.bind(this));\n\t\t}\n\t\tif (this.options.removable) {\n\t\t\tthis.removeBtn.addEventListener('click', this.onRemove.bind(this));\n\t\t}\n\t}\n\n\ttoggleComplete() {\n\t\tthis.complete = !this.complete;\n\t}\n\n\tonRemove() {\n\t\tvar itemRemove = new CustomEvent(\"todoListItem.remove\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { item: this }\n\t\t});\n\t\tthis.elem.dispatchEvent(itemRemove);\n\n\t\tthis.elem.remove();\n\t}\n\n\tonEdit() {\n\t\tthis.textBox.classList.remove('single-line');\n\t\t// this.placeCaretAtEnd();\n\t\tthis.elem.classList.add('active');\n\t}\n\n\tonBlur() {\n\t\tif (event.target != this.textBox) {\n\t\t\tthis.elem.classList.remove('active');\n\n\t\t\tthis.updateTextValue();\n\t\t}\n\t}\n\n\tupdateTextValue() {\n\t\tif (this.textBox.innerHTML && !this.isActualText()) {\n\t\t\tthis.text = this.textBox.innerHTML;\n\t\t} else {\n\t\t\tthis.textBox.innerHTML = this.text;\n\t\t}\n\t}\n\n\tisActualText() {\n\t\treturn this.text == this.textBox.innerHTML ? true : false;\n\t}\n\n\tplaceCaretAtEnd() {\n\t\tvar range,selection;\n\t\trange = document.createRange();//Create a range (a range is a like the selection but invisible)\n\t\trange.selectNodeContents(this.textBox);//Select the entire contents of the element with the range\n\t\trange.collapse(false);//collapse the range to the end point. false means collapse to end rather than the start\n\t\tselection = window.getSelection();//get the selection object (allows you to change selection)\n\t\tselection.removeAllRanges();//remove any selections already made\n\t\tselection.addRange(range);//make the range you have just created the visible selection\n\t}\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/todoListItem.js\n// module id = 4\n// module chunks = 0","/*\n*    JavaScript TodoListBuilder\n*    Author: Vladimir Chernov\n*    For KeepSolid Summer Internship 2017\n*/\n/*jslint esversion: 6 */\n\nimport { TodoList, TodoListDefaults } from \"./todoList.js\";\n\nexport const TodoListBuilderDefaults = {\n\tenableAdding: true,\n\tboardClasses: '',\n\ttodoListOuterClasses: 'todolist-outer',\n\tbuilderFormOuterClasses: 'builder-form-outer',\n\tbuilderFormClasses: 'builder-form',\n\tbuilderInputOuterClasses: 'form-control',\n\tbuilderButtonText: 'Add TodoList',\n\tbuilderPlaceholder: 'New TodoList',\n\tbuilderButtonClasses: 'btn btn-builder', // string of classes, e.g. '.my.outer>.nested'\n\ttodoList: { // extends todoList default options\n\t\ttools: true,\n\t\tmoving: true\n\t},\n\tsources: [] // array of URL strings\n};\n\nexport class TodoListBuilder {\n\n\tconstructor(builderParentElement, options) {\n\n\t\tthis.options = Object.assign({}, TodoListBuilderDefaults, options);\n\t\tthis.options.todoList = Object.assign(\n\t\t\t{},\n\t\t\tTodoListBuilderDefaults.todoList,\n\t\t\toptions.todoList);\n\n\t\tthis.lists = [];\n\t\tthis.data = [];\n\n\t\tthis.loadTemplate(builderParentElement);\n\t\tthis.init();\n\t\tthis.initEvents();\n\n\t}\n\n\tloadTemplate(builderParentElement) {\n\t\tlet template = `\n\t\t<div class=\"todolist-builder\">\n\t\t\t<div class=\"todolist-board ${this.options.boardClasses}\"></div>\n\t\t</div>\n\t\t`;\n\t\tbuilderParentElement.innerHTML = template;\n\t\tthis.board = builderParentElement.querySelector('.todolist-board');\n\n\t\tthis.todoListOuterTemplate = this.createOuter(this.options.todoListOuterClasses);\n\n\t\tthis.options.enableAdding && this.createBuilderForm();\n\t}\n\n\tcreateBuilderForm() {\n\t\tthis.builder = {};\n\n\t\tthis.builder.form = document.createElement('form');\n\t\tthis.builder.form.className = this.options.builderFormClasses;\n\n\t\tthis.builder.input = document.createElement('input');\n\t\tthis.builder.input.type = 'text';\n\t\tthis.builder.input.placeholder = this.options.builderPlaceholder;\n\n\t\tthis.builder.button = document.createElement('button');\n\t\tthis.builder.button.type = 'submit';\n\t\tthis.builder.button.className = this.options.builderButtonClasses;\n\t\tthis.builder.button.innerHTML = this.options.builderButtonText;\n\n\t\tlet builderOuter = this.createOuter(this.options.builderFormOuterClasses) || this.builder.form;\n\t\tconsole.log(builderOuter);\n\t\tlet builderOuterDeepest = builderOuter.querySelector('.outer-deepest') || builderOuter;\n\n\t\tlet inputOuter = this.createOuter(this.options.builderInputOuterClasses) || this.builder.input;\n\t\tlet inputOuterDeepest = inputOuter.querySelector('.outer-deepest') || inputOuter;\n\n\t\tif (builderOuter != this.builder.form) {\n\t\t\tbuilderOuterDeepest.appendChild(this.builder.form);\n\t\t}\n\t\tif (builderOuter != this.builder.form) {\n\t\t\tinputOuterDeepest.appendChild(this.builder.input);\n\t\t}\n\n\t\tbuilderOuterDeepest.classList.remove('outer-deepest');\n\t\tinputOuterDeepest.classList.remove('outer-deepest');\n\n\t\tthis.builder.form.appendChild(inputOuter);\n\t\tthis.builder.form.appendChild(this.builder.button);\n\t\tthis.board.parentElement.insertBefore(builderOuter, this.board);\n\t}\n\n\tcreateOuter(outerClassesString) {\n\t\tif (!outerClassesString) return;\n\n\t\tlet outerElementsArray = outerClassesString.split('>'),\n\t\t\tlast = outerElementsArray.length - 1,\n\t\t\ti = 0,\n\t\t\tstr = '';\n\n\t\touterElementsArray.forEach(outerElementsClasses => {\n\t\t\tif (i == last) {\n\t\t\t\touterElementsClasses += '.outer-deepest';\n\t\t\t}\n\n\t\t\tstr += '<div class=\"';\n\t\t\tlet elementClassArray = outerElementsClasses.split('.');\n\n\t\t\telementClassArray.forEach(className => {\n\t\t\t\tstr += className + ' ';\n\t\t\t});\n\n\t\t\tstr += '\">';\n\t\t\ti++;\n\t\t});\n\t\touterElementsArray.forEach(() => {\n\t\t\tstr += '</div>';\n\t\t});\n\n\t\tlet temp = document.createElement('div');\n\t\ttemp.innerHTML = str;\n\t\tlet outer = temp.childNodes[0];\n\n\t\treturn outer;\n\t}\n\n\tinit() {\n\t\tlet data = localStorage.todolist;\n\t\tdata && this.parseLocal(data);\n\n\t\t// build from local if exists\n\t\tif (this.data.length > 0) {\n\t\t\tthis.data.forEach(todoList => {\n\t\t\t\tthis.buildList(todoList);\n\t\t\t});\n\t\t}\n\n\t\t// build from sources if set\n\t\tif (this.options.sources.length > 0) {\n\t\t\tthis.options.sources.forEach(source => {\n\t\t\t\tthis.getSourceData(source).then((sourceData) => {\n\t\t\t\t\tthis.data = this.data.concat(sourceData);\n\t\t\t\t\t// add todolists from source when response come\n\t\t\t\t\tsourceData.forEach(todoList => {\n\t\t\t\t\t\tthis.buildList(todoList);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t// build empty list if no data set\n\t\tif (this.data.length === 0 && this.options.sources.length === 0) {\n\t\t\tthis.buildList();\n\t\t}\n\t}\n\n\tparseLocal(data) {\n\t\tlet parsedLists = JSON.parse(data);\n\n\t\tparsedLists.forEach(list => {\n\t\t\tlet listData = {\n\t\t\t\torder: list[0],\n\t\t\t\ttitle: list[1],\n\t\t\t\tdata: []\n\t\t\t};\n\t\t\tlist[2].forEach(item => {\n\t\t\t\tlet itemData = {\n\t\t\t\t\torder: item[0],\n\t\t\t\t\ttext: item[1],\n\t\t\t\t\tcomplete: item[2]\n\t\t\t\t};\n\t\t\t\tlistData.data.push(itemData);\n\t\t\t});\n\t\t\tthis.data.push(listData);\n\t\t});\n\t}\n\n\tgetSourceData(url) {\n\t\treturn fetch(url).then(function(result){\n\t\t\treturn result.json();\n\t\t});\n\t}\n\n\tbuildList(todoList) {\n\t\ttodoList = todoList || {};\n\t\tlet newList = {};\n\n\t\tlet outer, outerDeepest = null;\n\n\t\tif (this.todoListOuterTemplate) {\n\t\t\touter = this.todoListOuterTemplate.cloneNode(true);\n\t\t\touterDeepest = outer.querySelector('.outer-deepest') || outer;\n\t\t\touterDeepest.classList.remove('outer-deepest');\n\t\t\tthis.board.appendChild(outer);\n\t\t}\n\n\t\tlet newListOptions = {\n\t\t\ttitleText: todoList.title || this.options.todoList.titleText\n\t\t};\n\t\tnewListOptions = Object.assign({}, this.options.todoList, newListOptions);\n\n\t\tnewList.item = new TodoList(outerDeepest || this.board, todoList.data, newListOptions);\n\t\tnewList.outer = outer || newList.item.listElement;\n\t\t// newList.order = this.lists.length; // starts from 0\n\t\tthis.lists.push(newList);\n\t}\n\n\tmoveListLeft(list, index) {\n\t\tthis.board.insertBefore(list.outer, list.outer.previousSibling);\n\n\t\tthis.lists.splice(index, 1);\n\t\tthis.lists.splice(--index, 0, list);\n\t}\n\n\tmoveListRight(list, index) {\n\t\tthis.board.insertBefore(list.outer.nextSibling, list.outer);\n\n\t\tthis.lists.splice(index, 1);\n\t\tthis.lists.splice(++index, 0, list);\n\t}\n\n\tisFirst(list) {\n\t\treturn this.lists.indexOf(list) === 0 ? true : false;\n\t}\n\n\tisLast(list) {\n\t\treturn this.lists.indexOf(list) == this.lists.length - 1 ? true : false;\n\t}\n\n\tupdateStorage() {\n\t\tlet newData = [];\n\t\tthis.lists.forEach((list, listIndex) => {\n\t\t\tlist = list.item;\n\t\t\tlet items = [];\n\n\t\t\t// 0: order, 1: title, 2: [...items]\n\t\t\tlet listData = [listIndex, list.title, items];\n\n\t\t\tlist.itemsArray.forEach((item, itemIndex) => {\n\t\t\t\t// 0: order, 1: text, 2: complete\n\t\t\t\tlet itemData = [itemIndex, item.text, item.complete];\n\t\t\t\titems.push(itemData);\n\t\t\t});\n\n\t\t\tnewData.push(listData);\n\t\t});\n\t\tnewData = JSON.stringify(newData);\n\t\tlocalStorage.setItem('todolist', newData);\n\t\tconsole.log('Storage is updated...');\n\t}\n\n\tinitEvents() {\n\n\t\tif (this.builder.form) {\n\t\t\tthis.builder.form.addEventListener('submit', this.onCreateNew.bind(this));\n\t\t}\n\n\t\tthis.board.addEventListener('todoList.setTitle', this.onTodoListSetTitle.bind(this));\n\t\tthis.board.addEventListener('todoList.addItem',  this.onTodoListAddItem.bind(this));\n\t\tthis.board.addEventListener('todoList.remove', \t this.onTodoListRemove.bind(this));\n\t\tthis.board.addEventListener('todoList.clear', \t this.onTodoListClear.bind(this));\n\t\tthis.board.addEventListener('todoList.move', \t this.onTodoListMove.bind(this));\n\n\t\tthis.board.addEventListener('todoListItem.setStatus', this.onItemSetStatus.bind(this));\n\t\tthis.board.addEventListener('todoListItem.remove', \t  this.onItemRemove.bind(this));\n\t\tthis.board.addEventListener('todoListItem.edit', \t  this.onItemEdit.bind(this));\n\n\t}\n\n\tonCreateNew(event) {\n\t\tevent.preventDefault();\n\n\t\tthis.buildList({\n\t\t\ttitle: this.builder.input && this.builder.input.value\n\t\t});\n\t\tthis.builder.input.value = '';\n\n\t\tthis.updateStorage();\n\t}\n\n\tonTodoListClear(event) {\n\t\t// ...some actions for particular event\n\t\tthis.updateStorage();\n\t}\n\n\tonTodoListSetTitle(event) {\n\t\t// ...some actions for particular event\n\t\tthis.updateStorage();\n\t}\n\n\tonTodoListAddItem(event) {\n\t\t// ...some actions for particular event\n\t\tthis.updateStorage();\n\t}\n\n\tonTodoListRemove(event) {\n\t\tfor (var i = 0; i < this.lists.length; i++) {\n\t\t\tif (this.lists[i].item == event.detail.todoList) { break; }\n\t\t}\n\t\tthis.lists[i].outer.remove();\n\t\tthis.lists.splice(i, 1);\n\n\t\tthis.updateStorage();\n\t}\n\n\tonTodoListMove(event) {\n\t\tlet movingList = null;\n\t\tlet direction = event.detail.direction;\n\n\t\tfor (var i = 0; i < this.lists.length; i++) {\n\t\t\tif (this.lists[i].item == event.detail.todoList) {\n\t\t\t\tmovingList = this.lists[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ((this.isFirst(movingList) && direction == 'left') ||\n\t\t\t(this.isLast(movingList) && direction == 'right')) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch(direction) {\n\t\t\tcase 'left':\n\t\t\t\tthis.moveListLeft(movingList, i);\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\tthis.moveListRight(movingList, i);\n\t\t\t\tbreak;\n\t\t\tdefault: return;\n\t\t}\n\n\t\tthis.updateStorage();\n\t}\n\n\tonItemRemove(event) {\n\t\t// ...some actions for particular event\n\t\tthis.updateStorage();\n\t}\n\n\tonItemEdit(event) {\n\t\t// ...some actions for particular event\n\t\tthis.updateStorage();\n\t}\n\n\tonItemSetStatus(event) {\n\t\t// ...some actions for particular event\n\t\tthis.updateStorage();\n\t}\n\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/todoListBuilder.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}